def get_y(m, b, x):
    y = ()
    y = (m*x + b)
    return y
#print(get_y(1, 0, 7))
#print(get_y(5, 10, 3))

def calculate_error(m, b, point):
    x_point, y_point = point
    y = m*x_point + b
    error = abs(y - y_point)
    return error
#print(calculate_error(1, 0, (3,3)))
#print(calculate_error(1, 0, (3,4)))

def calculate_all_error(m, b, points):
    total_error = int()
    for point in points:
        error = calculate_error(m, b, point)
        total_error += error
    return total_error

datapoints = [(1, 1), (3, 3), (5, 5), (-1, -1)]
#print(calculate_all_error(1, 0, datapoints))
#print(calculate_all_error(1, 1, datapoints))

possible_ms = []
first_m = -10
last_m = 10
possible_ms.append(first_m)
for m in possible_ms:
    if m < last_m:
        possible_ms.append(m + 0.1)
#print(possible_ms)

possible_bs = []
first_b = -20
last_b = 20
possible_bs.append(first_b)
for b in possible_bs:
    if b < last_b:
        possible_bs.append(b + 0.1)
#print(possible_bs)

smallest_error = float('inf')
smallest_m = 0
smallest_b = 0

for m in possible_ms:
    for b in possible_bs:
        line_error = calculate_all_error(m, b, datapoints)
        if line_error < smallest_error:
            smallest_error = line_error
            smallest_m = m
            smallest_b = b

print(smallest_error, smallest_m, smallest_b)

print(get_y(smallest_m, smallest_b, 6))
